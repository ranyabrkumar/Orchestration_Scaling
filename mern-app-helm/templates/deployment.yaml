apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.appName }}-deployment"
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.container.labelName }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.container.labelName }}
  template:
    metadata:
      labels:
        app: {{ .Values.container.labelName }}
    spec:
      containers:
        - name: {{ .Values.container.appName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"

          {{- if .Values.livenessProbe.enabled | default false }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.path }}
              port: {{ .Values.container.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}

          {{- if .Values.readinessProbe.enabled | default false }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.container.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}

          ports:
            - containerPort: {{ .Values.container.port }}
          env:
{{- range .Values.env }}
            - name: {{ .name }}
              {{- if .value }}
              value: "{{ .value }}"
              {{- else if .valueFrom }}
              valueFrom:
{{ toYaml .valueFrom | nindent 14 }}
              {{- end }}
{{- end }}
